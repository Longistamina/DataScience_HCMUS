nndb = pd.read_csv('Data/nndb_flat.csv')

from sklearn.preprocessing import MinMaxScaler, FunctionTransformer
from sklearn.compose import ColumnTransformer
from sklearn.manifold import LocallyLinearEmbedding
from imblearn.pipeline import Pipeline

numeric_cols = nndb.columns

#Build LogScaler
LogScaler = ColumnTransformer(
    [('LogTransformer', FunctionTransformer(func = lambda x: np.log(x+0.5), inverse_func = lambda x: np.exp(x)-0.5, validate = True), numeric_cols)],
    remainder = 'passthrough'
)

#Build LLE pipeline with scaling steps
lle_pipe = Pipeline([
    ('LogScaler', LogScaler),
    ('MinMaxScaler', MinMaxScaler()),
    ('LLE', LocallyLinearEmbedding(n_neighbors=5, n_components=3)) #n_components=3 means the transformed data will be 3-D
])

lle_pipe.fit(nndb)


#Create LLE reduced dataframe
nndb_lle = pd.DataFrame(
    lle_pipe.transform(nndb),
    columns = [f'PC{i+1}' for i in range(lle_pipe.named_steps['LLE'].n_components)]
)

print(nndb_lle)


#2D visualize
sbn.scatterplot(data = nndb_lle, x = 'PC1', y = 'PC2', edgecolors = 'black', hue = 'PC3', palette = plt.cm.Spectral)
plt.show()

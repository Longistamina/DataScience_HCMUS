#---------------------------------------------------#
#----------- Build ECLAT code ----------------------#
#---------------------------------------------------#

# # source code from: http://codegist.net/snippet/python/eclatpy_evertheylen_python
def tidlists(transactions):
    tl = defaultdict(set)
    for tid, t in enumerate(transactions):
        for item in t:
            tl[item].add(tid)
    return list(tl.items())
 
class IntersectAll:
    def __and__(self, other):
        return other
IntersectAll = IntersectAll()

def eclat(items, minsup=0, minlen=1):
    frequent_itemsets = {(): IntersectAll}
    def recurse(items, prefix):
        while len(items) > 0:
            item, item_tidlist = items.pop()
            l = prefix + (item,)  # l is the (ordered) tuple of items we are looking for
            new_tidlist = frequent_itemsets[prefix] & item_tidlist
            if len(new_tidlist) >= minsup:  # add frequent_itemsets to the new frequent_itemsets
                frequent_itemsets[l] = new_tidlist
             
            # define the new l-conditional database
            new_items = []
            for new_item, _item_tidlist in items:
                new_item_tidlist = _item_tidlist & item_tidlist
                if len(new_item_tidlist) >= minsup:
                    new_items.append((new_item, new_item_tidlist))
             
            # recurse, with l as prefix
            recurse(new_items, l)
     
    recurse(items.copy(), ())
    return {k: len(v) for k, v in frequent_itemsets.items() if len(k) >= minlen}


#-----------------------------------#
#-------- Example ------------------#
#-----------------------------------#

import sys
from collections import defaultdict
import random

dataset = [['Eggs', 'Milk', 'Onion', 'Nutmeg', 'Kidney Beans', 'Yogurt'],
           ['Dill', 'Onion', 'Nutmeg', 'Eggs', 'Yogurt'],
           ['Milk', 'Apple', 'Kidney Beans', 'Eggs'],
           ['Milk', 'Unicorn', 'Corn', 'Kidney Beans', 'Yogurt'],
           ['Corn', 'Onion', 'Kidney Beans', 'Ice cream', 'Eggs'],
           ['Orange', 'Corn', 'Eggs', 'Yogurt'],
           ['Milk', 'Apple', 'Orange', 'Eggs'], 
           ['Corn', 'Coke', 'Kidney Beans', 'Ice cream'],
           ['Dill', 'Onion', 'Nutmeg'],
           ['Coke', 'Apple', 'Ice cream']
          ]

tid = tidlists(dataset)
print(tid)

result = eclat(tl, minsup=2, minlen=2)
print(result)


### Visualize

import numpy as np
keys = result.values()
titles = result.keys()
list_titles = []
for item in titles:
    list_titles.append(','.join(item)) 

import matplotlib.pyplot as plt
plt.figure(figsize=(18,6))

y = np.array(list(keys))
c = np.empty((y.shape[0],), dtype=str)
c[y<=2] ='green'
c[y>2] ='red'

plt.bar(list_titles,keys, color=c.tolist())
plt.title("Association items with Support", color="red", fontsize=20)
plt.ylabel("Support", color="red", fontsize=18)
plt.xticks(rotation=85)
plt.xlabel("Itemsets", color='red', fontsize=18)
plt.show()